---
  # -------------------------------------------------------------------
  # Copy files to remote hosts
  # -------------------------------------------------------------------
  
- name: Copy configuration server directory to the remote hosts
  copy:
    src: ../models/configuration_server
    dest: "{{ remote_home_path }}/tmp_simulation/models"
  
- name: Copy model directory to the remote hosts
  copy:
    src: ../models/{{ item }}
    dest: "{{ remote_home_path }}/tmp_simulation/models"
  loop: "{{ hostvars[inventory_hostname]['models'] }}"
  when: item != "configuration_server"

- name: Check if configuration folder exists
  file: path="{{ remote_home_path }}/tmp_simulation/configurations/{{ config }}" state=directory

- name: Copy configuration file to remote hosts
  copy:
    src: ../configurations/{{ config }}/{{ item }}.config
    dest: "{{ remote_home_path }}/tmp_simulation/configurations/{{ config }}/"
  loop: "{{ hostvars[inventory_hostname]['models'] }}"
  when: item != "configuration_server"
  
- name: Copy resources to remote hosts
  copy:
    src: ../resources/idl
    dest: "{{ remote_home_path }}/tmp_simulation/resources"
  loop: "{{ hostvars[inventory_hostname]['models'] }}"
  when: item != "configuration_server"

- name: Fix 'tmp-folder' permission
  file: path=tmp_simulation owner=user mode=0775 state=directory recurse=yes

  # -------------------------------------------------------------------
  # Execute models local or remote
  # -------------------------------------------------------------------
- name: Run configuration server on the host
  shell: "{{ remote_home_path }}/tmp_simulation/models/configuration_server/build/bin/configuration_server --models-config-file {{ remote_home_path }}/tmp_simulation/models/configuration_server/configuration/models-config.xml"
  async: 1000
  poll: 0
  changed_when: False
  
- name: Run models on the hosts
  shell: "{{ remote_home_path }}/tmp_simulation/models/{{ item }}/build/bin/{{ item }}"
  async: 1000
  poll: 0
  loop: "{{ hostvars[inventory_hostname]['models'] }}"
  when:
    - item != "simulation_model"
    - item != "configuration_server"
  changed_when: False
  
- name: Run simulation model on the host
  shell: "{{ remote_home_path }}/tmp_simulation/models/{{ item }}/build/bin/{{ item }} --load-config {{ remote_home_path }}/tmp_simulation/configurations/{{ config }}/"
  loop: "{{ hostvars[inventory_hostname]['models'] }}"
  when: item == "simulation_model"
  register: sim_out
  changed_when: False

- debug: var="{{ item.stdout_lines }}"
  loop: "{{ sim_out.results }}"
  when: item.stdout_lines is defined
  # -------------------------------------------------------------------